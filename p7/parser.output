Grammar

    0 $accept: program "end file"

    1 program: globals

    2 globals: globals decl
    3        | %empty

    4 decl: varDecl
    5     | fnDecl

    6 varDecl: type id SEMICOL

    7 type: primType
    8     | PTR primType

    9 primType: INT
   10         | BOOL
   11         | STRING
   12         | SHORT
   13         | VOID

   14 fnDecl: type id LPAREN RPAREN LCURLY stmtList RCURLY
   15       | type id LPAREN formals RPAREN LCURLY stmtList RCURLY

   16 formals: formalDecl
   17        | formals COMMA formalDecl

   18 formalDecl: type id

   19 stmtList: %empty
   20         | stmtList stmt

   21 stmt: varDecl
   22     | assignExp SEMICOL
   23     | lval DEC SEMICOL
   24     | lval INC SEMICOL
   25     | READ lval SEMICOL
   26     | WRITE exp SEMICOL
   27     | WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY
   28     | IF LPAREN exp RPAREN LCURLY stmtList RCURLY
   29     | IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY
   30     | RETURN exp SEMICOL
   31     | RETURN SEMICOL
   32     | callExp SEMICOL

   33 exp: assignExp
   34    | exp MINUS exp
   35    | exp PLUS exp
   36    | exp TIMES exp
   37    | exp DIVIDE exp
   38    | exp AND exp
   39    | exp OR exp
   40    | exp EQUALS exp
   41    | exp NOTEQUALS exp
   42    | exp GREATER exp
   43    | exp GREATEREQ exp
   44    | exp LESS exp
   45    | exp LESSEQ exp
   46    | NOT exp
   47    | MINUS term
   48    | term

   49 assignExp: lval ASSIGN exp

   50 callExp: id LPAREN RPAREN
   51        | id LPAREN actualsList RPAREN

   52 actualsList: exp
   53            | actualsList COMMA exp

   54 term: lval
   55     | INTLITERAL
   56     | SHORTLITERAL
   57     | STRLITERAL
   58     | AMP id
   59     | TRUE
   60     | FALSE
   61     | LPAREN exp RPAREN
   62     | callExp

   63 lval: id
   64     | AT id

   65 id: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    AMP <transToken> (258) 58
    AND <transToken> (259) 38
    ASSIGN <transToken> (260) 49
    AT <transToken> (261) 64
    BOOL <transToken> (262) 10
    COMMA <transToken> (263) 17 53
    DEC <transToken> (264) 23
    DIVIDE <transToken> (265) 37
    ELSE <transToken> (266) 29
    EQUALS <transToken> (267) 40
    FALSE <transToken> (268) 60
    GREATER <transToken> (269) 42
    GREATEREQ <transToken> (270) 43
    ID <transIDToken> (271) 65
    IF <transToken> (272) 28 29
    INC <transToken> (273) 24
    INT <transToken> (274) 9
    INTLITERAL <transIntToken> (275) 55
    LCURLY <transToken> (276) 14 15 27 28 29
    LESS <transToken> (277) 44
    LESSEQ <transToken> (278) 45
    LPAREN <transToken> (279) 14 15 27 28 29 50 51 61
    MINUS <transToken> (280) 34 47
    NOT <transToken> (281) 46
    NOTEQUALS <transToken> (282) 41
    OR <transToken> (283) 39
    PLUS <transToken> (284) 35
    PTR <transToken> (285) 8
    READ <transToken> (286) 25
    RETURN <transToken> (287) 30 31
    RCURLY <transToken> (288) 14 15 27 28 29
    RPAREN <transToken> (289) 14 15 27 28 29 50 51 61
    SEMICOL <transToken> (290) 6 22 23 24 25 26 30 31 32
    SHORT <transToken> (291) 12
    SHORTLITERAL <transShortToken> (292) 56
    STRING <transToken> (293) 11
    STRLITERAL <transStrToken> (294) 57
    TIMES <transToken> (295) 36
    TRUE <transToken> (296) 59
    VOID <transToken> (297) 13
    WHILE <transToken> (298) 27
    WRITE <transToken> (299) 26


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program <transProgram> (46)
        on left: 1
        on right: 0
    globals <transDeclList> (47)
        on left: 2 3
        on right: 1 2
    decl <transDecl> (48)
        on left: 4 5
        on right: 2
    varDecl <transVarDecl> (49)
        on left: 6
        on right: 4 21
    type <transType> (50)
        on left: 7 8
        on right: 6 14 15 18
    primType <transType> (51)
        on left: 9 10 11 12 13
        on right: 7 8
    fnDecl <transFn> (52)
        on left: 14 15
        on right: 5
    formals <transFormalList> (53)
        on left: 16 17
        on right: 15 17
    formalDecl <transFormal> (54)
        on left: 18
        on right: 16 17
    stmtList <transStmts> (55)
        on left: 19 20
        on right: 14 15 20 27 28 29
    stmt <transStmt> (56)
        on left: 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 20
    exp <transExp> (57)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
        on right: 26 27 28 29 30 34 35 36 37 38 39 40 41 42 43 44 45 46 49 52 53 61
    assignExp <transAssignExp> (58)
        on left: 49
        on right: 22 33
    callExp <transCallExp> (59)
        on left: 50 51
        on right: 32 62
    actualsList <transActuals> (60)
        on left: 52 53
        on right: 51 53
    term <transExp> (61)
        on left: 54 55 56 57 58 59 60 61 62
        on right: 47 48
    lval <transLVal> (62)
        on left: 63 64
        on right: 23 24 25 49 54
    id <transID> (63)
        on left: 65
        on right: 6 14 15 18 50 51 58 63 64


State 0

    0 $accept: . program "end file"

    $default  reduce using rule 3 (globals)

    program  go to state 1
    globals  go to state 2


State 1

    0 $accept: program . "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: globals .
    2 globals: globals . decl

    BOOL    shift, and go to state 4
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9

    $default  reduce using rule 1 (program)

    decl      go to state 10
    varDecl   go to state 11
    type      go to state 12
    primType  go to state 13
    fnDecl    go to state 14


State 3

    0 $accept: program "end file" .

    $default  accept


State 4

   10 primType: BOOL .

    $default  reduce using rule 10 (primType)


State 5

    9 primType: INT .

    $default  reduce using rule 9 (primType)


State 6

    8 type: PTR . primType

    BOOL    shift, and go to state 4
    INT     shift, and go to state 5
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9

    primType  go to state 15


State 7

   12 primType: SHORT .

    $default  reduce using rule 12 (primType)


State 8

   11 primType: STRING .

    $default  reduce using rule 11 (primType)


State 9

   13 primType: VOID .

    $default  reduce using rule 13 (primType)


State 10

    2 globals: globals decl .

    $default  reduce using rule 2 (globals)


State 11

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


State 12

    6 varDecl: type . id SEMICOL
   14 fnDecl: type . id LPAREN RPAREN LCURLY stmtList RCURLY
   15       | type . id LPAREN formals RPAREN LCURLY stmtList RCURLY

    ID  shift, and go to state 16

    id  go to state 17


State 13

    7 type: primType .

    $default  reduce using rule 7 (type)


State 14

    5 decl: fnDecl .

    $default  reduce using rule 5 (decl)


State 15

    8 type: PTR primType .

    $default  reduce using rule 8 (type)


State 16

   65 id: ID .

    $default  reduce using rule 65 (id)


State 17

    6 varDecl: type id . SEMICOL
   14 fnDecl: type id . LPAREN RPAREN LCURLY stmtList RCURLY
   15       | type id . LPAREN formals RPAREN LCURLY stmtList RCURLY

    LPAREN   shift, and go to state 18
    SEMICOL  shift, and go to state 19


State 18

   14 fnDecl: type id LPAREN . RPAREN LCURLY stmtList RCURLY
   15       | type id LPAREN . formals RPAREN LCURLY stmtList RCURLY

    BOOL    shift, and go to state 4
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    RPAREN  shift, and go to state 20
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9

    type        go to state 21
    primType    go to state 13
    formals     go to state 22
    formalDecl  go to state 23


State 19

    6 varDecl: type id SEMICOL .

    $default  reduce using rule 6 (varDecl)


State 20

   14 fnDecl: type id LPAREN RPAREN . LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 24


State 21

   18 formalDecl: type . id

    ID  shift, and go to state 16

    id  go to state 25


State 22

   15 fnDecl: type id LPAREN formals . RPAREN LCURLY stmtList RCURLY
   17 formals: formals . COMMA formalDecl

    COMMA   shift, and go to state 26
    RPAREN  shift, and go to state 27


State 23

   16 formals: formalDecl .

    $default  reduce using rule 16 (formals)


State 24

   14 fnDecl: type id LPAREN RPAREN LCURLY . stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 28


State 25

   18 formalDecl: type id .

    $default  reduce using rule 18 (formalDecl)


State 26

   17 formals: formals COMMA . formalDecl

    BOOL    shift, and go to state 4
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9

    type        go to state 21
    primType    go to state 13
    formalDecl  go to state 29


State 27

   15 fnDecl: type id LPAREN formals RPAREN . LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 30


State 28

   14 fnDecl: type id LPAREN RPAREN LCURLY stmtList . RCURLY
   20 stmtList: stmtList . stmt

    AT      shift, and go to state 31
    BOOL    shift, and go to state 4
    ID      shift, and go to state 16
    IF      shift, and go to state 32
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    READ    shift, and go to state 33
    RETURN  shift, and go to state 34
    RCURLY  shift, and go to state 35
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9
    WHILE   shift, and go to state 36
    WRITE   shift, and go to state 37

    varDecl    go to state 38
    type       go to state 39
    primType   go to state 13
    stmt       go to state 40
    assignExp  go to state 41
    callExp    go to state 42
    lval       go to state 43
    id         go to state 44


State 29

   17 formals: formals COMMA formalDecl .

    $default  reduce using rule 17 (formals)


State 30

   15 fnDecl: type id LPAREN formals RPAREN LCURLY . stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 45


State 31

   64 lval: AT . id

    ID  shift, and go to state 16

    id  go to state 46


State 32

   28 stmt: IF . LPAREN exp RPAREN LCURLY stmtList RCURLY
   29     | IF . LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 47


State 33

   25 stmt: READ . lval SEMICOL

    AT  shift, and go to state 31
    ID  shift, and go to state 16

    lval  go to state 48
    id    go to state 49


State 34

   30 stmt: RETURN . exp SEMICOL
   31     | RETURN . SEMICOL

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SEMICOL       shift, and go to state 56
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 60
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 35

   14 fnDecl: type id LPAREN RPAREN LCURLY stmtList RCURLY .

    $default  reduce using rule 14 (fnDecl)


State 36

   27 stmt: WHILE . LPAREN exp RPAREN LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 65


State 37

   26 stmt: WRITE . exp SEMICOL

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 66
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 38

   21 stmt: varDecl .

    $default  reduce using rule 21 (stmt)


State 39

    6 varDecl: type . id SEMICOL

    ID  shift, and go to state 16

    id  go to state 67


State 40

   20 stmtList: stmtList stmt .

    $default  reduce using rule 20 (stmtList)


State 41

   22 stmt: assignExp . SEMICOL

    SEMICOL  shift, and go to state 68


State 42

   32 stmt: callExp . SEMICOL

    SEMICOL  shift, and go to state 69


State 43

   23 stmt: lval . DEC SEMICOL
   24     | lval . INC SEMICOL
   49 assignExp: lval . ASSIGN exp

    ASSIGN  shift, and go to state 70
    DEC     shift, and go to state 71
    INC     shift, and go to state 72


State 44

   50 callExp: id . LPAREN RPAREN
   51        | id . LPAREN actualsList RPAREN
   63 lval: id .

    LPAREN  shift, and go to state 73

    $default  reduce using rule 63 (lval)


State 45

   15 fnDecl: type id LPAREN formals RPAREN LCURLY stmtList . RCURLY
   20 stmtList: stmtList . stmt

    AT      shift, and go to state 31
    BOOL    shift, and go to state 4
    ID      shift, and go to state 16
    IF      shift, and go to state 32
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    READ    shift, and go to state 33
    RETURN  shift, and go to state 34
    RCURLY  shift, and go to state 74
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9
    WHILE   shift, and go to state 36
    WRITE   shift, and go to state 37

    varDecl    go to state 38
    type       go to state 39
    primType   go to state 13
    stmt       go to state 40
    assignExp  go to state 41
    callExp    go to state 42
    lval       go to state 43
    id         go to state 44


State 46

   64 lval: AT id .

    $default  reduce using rule 64 (lval)


State 47

   28 stmt: IF LPAREN . exp RPAREN LCURLY stmtList RCURLY
   29     | IF LPAREN . exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 75
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 48

   25 stmt: READ lval . SEMICOL

    SEMICOL  shift, and go to state 76


State 49

   63 lval: id .

    $default  reduce using rule 63 (lval)


State 50

   58 term: AMP . id

    ID  shift, and go to state 16

    id  go to state 77


State 51

   60 term: FALSE .

    $default  reduce using rule 60 (term)


State 52

   55 term: INTLITERAL .

    $default  reduce using rule 55 (term)


State 53

   61 term: LPAREN . exp RPAREN

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 78
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 54

   47 exp: MINUS . term

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    callExp  go to state 62
    term     go to state 79
    lval     go to state 80
    id       go to state 44


State 55

   46 exp: NOT . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 81
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 56

   31 stmt: RETURN SEMICOL .

    $default  reduce using rule 31 (stmt)


State 57

   56 term: SHORTLITERAL .

    $default  reduce using rule 56 (term)


State 58

   57 term: STRLITERAL .

    $default  reduce using rule 57 (term)


State 59

   59 term: TRUE .

    $default  reduce using rule 59 (term)


State 60

   30 stmt: RETURN exp . SEMICOL
   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    SEMICOL    shift, and go to state 93
    TIMES      shift, and go to state 94


State 61

   33 exp: assignExp .

    $default  reduce using rule 33 (exp)


State 62

   62 term: callExp .

    $default  reduce using rule 62 (term)


State 63

   48 exp: term .

    $default  reduce using rule 48 (exp)


State 64

   49 assignExp: lval . ASSIGN exp
   54 term: lval .

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 54 (term)


State 65

   27 stmt: WHILE LPAREN . exp RPAREN LCURLY stmtList RCURLY

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 95
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 66

   26 stmt: WRITE exp . SEMICOL
   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    SEMICOL    shift, and go to state 96
    TIMES      shift, and go to state 94


State 67

    6 varDecl: type id . SEMICOL

    SEMICOL  shift, and go to state 19


State 68

   22 stmt: assignExp SEMICOL .

    $default  reduce using rule 22 (stmt)


State 69

   32 stmt: callExp SEMICOL .

    $default  reduce using rule 32 (stmt)


State 70

   49 assignExp: lval ASSIGN . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 97
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 71

   23 stmt: lval DEC . SEMICOL

    SEMICOL  shift, and go to state 98


State 72

   24 stmt: lval INC . SEMICOL

    SEMICOL  shift, and go to state 99


State 73

   50 callExp: id LPAREN . RPAREN
   51        | id LPAREN . actualsList RPAREN

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    RPAREN        shift, and go to state 100
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp          go to state 101
    assignExp    go to state 61
    callExp      go to state 62
    actualsList  go to state 102
    term         go to state 63
    lval         go to state 64
    id           go to state 44


State 74

   15 fnDecl: type id LPAREN formals RPAREN LCURLY stmtList RCURLY .

    $default  reduce using rule 15 (fnDecl)


State 75

   28 stmt: IF LPAREN exp . RPAREN LCURLY stmtList RCURLY
   29     | IF LPAREN exp . RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY
   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    RPAREN     shift, and go to state 103
    TIMES      shift, and go to state 94


State 76

   25 stmt: READ lval SEMICOL .

    $default  reduce using rule 25 (stmt)


State 77

   58 term: AMP id .

    $default  reduce using rule 58 (term)


State 78

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp
   61 term: LPAREN exp . RPAREN

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    RPAREN     shift, and go to state 104
    TIMES      shift, and go to state 94


State 79

   47 exp: MINUS term .

    $default  reduce using rule 47 (exp)


State 80

   54 term: lval .

    $default  reduce using rule 54 (term)


State 81

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp
   46    | NOT exp .

    $default  reduce using rule 46 (exp)


State 82

   38 exp: exp AND . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 105
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 83

   37 exp: exp DIVIDE . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 106
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 84

   40 exp: exp EQUALS . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 107
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 85

   42 exp: exp GREATER . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 108
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 86

   43 exp: exp GREATEREQ . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 109
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 87

   44 exp: exp LESS . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 110
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 88

   45 exp: exp LESSEQ . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 111
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 89

   34 exp: exp MINUS . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 112
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 90

   41 exp: exp NOTEQUALS . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 113
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 91

   39 exp: exp OR . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 114
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 92

   35 exp: exp PLUS . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 115
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 93

   30 stmt: RETURN exp SEMICOL .

    $default  reduce using rule 30 (stmt)


State 94

   36 exp: exp TIMES . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 116
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 95

   27 stmt: WHILE LPAREN exp . RPAREN LCURLY stmtList RCURLY
   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    RPAREN     shift, and go to state 117
    TIMES      shift, and go to state 94


State 96

   26 stmt: WRITE exp SEMICOL .

    $default  reduce using rule 26 (stmt)


State 97

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp
   49 assignExp: lval ASSIGN exp .

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    TIMES      shift, and go to state 94

    $default  reduce using rule 49 (assignExp)


State 98

   23 stmt: lval DEC SEMICOL .

    $default  reduce using rule 23 (stmt)


State 99

   24 stmt: lval INC SEMICOL .

    $default  reduce using rule 24 (stmt)


State 100

   50 callExp: id LPAREN RPAREN .

    $default  reduce using rule 50 (callExp)


State 101

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp
   52 actualsList: exp .

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    TIMES      shift, and go to state 94

    $default  reduce using rule 52 (actualsList)


State 102

   51 callExp: id LPAREN actualsList . RPAREN
   53 actualsList: actualsList . COMMA exp

    COMMA   shift, and go to state 118
    RPAREN  shift, and go to state 119


State 103

   28 stmt: IF LPAREN exp RPAREN . LCURLY stmtList RCURLY
   29     | IF LPAREN exp RPAREN . LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 120


State 104

   61 term: LPAREN exp RPAREN .

    $default  reduce using rule 61 (term)


State 105

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   38    | exp AND exp .
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    PLUS       shift, and go to state 92
    TIMES      shift, and go to state 94

    $default  reduce using rule 38 (exp)


State 106

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   37    | exp DIVIDE exp .
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    $default  reduce using rule 37 (exp)


State 107

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   40    | exp EQUALS exp .
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    DIVIDE  shift, and go to state 83
    MINUS   shift, and go to state 89
    PLUS    shift, and go to state 92
    TIMES   shift, and go to state 94

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 40 (exp)


State 108

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   42    | exp GREATER exp .
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    DIVIDE  shift, and go to state 83
    MINUS   shift, and go to state 89
    PLUS    shift, and go to state 92
    TIMES   shift, and go to state 94

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 42 (exp)


State 109

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   43    | exp GREATEREQ exp .
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    DIVIDE  shift, and go to state 83
    MINUS   shift, and go to state 89
    PLUS    shift, and go to state 92
    TIMES   shift, and go to state 94

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 43 (exp)


State 110

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   44    | exp LESS exp .
   45    | exp . LESSEQ exp

    DIVIDE  shift, and go to state 83
    MINUS   shift, and go to state 89
    PLUS    shift, and go to state 92
    TIMES   shift, and go to state 94

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 44 (exp)


State 111

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp
   45    | exp LESSEQ exp .

    DIVIDE  shift, and go to state 83
    MINUS   shift, and go to state 89
    PLUS    shift, and go to state 92
    TIMES   shift, and go to state 94

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 45 (exp)


State 112

   34 exp: exp . MINUS exp
   34    | exp MINUS exp .
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    DIVIDE  shift, and go to state 83
    TIMES   shift, and go to state 94

    $default  reduce using rule 34 (exp)


State 113

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   41    | exp NOTEQUALS exp .
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    DIVIDE  shift, and go to state 83
    MINUS   shift, and go to state 89
    PLUS    shift, and go to state 92
    TIMES   shift, and go to state 94

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 41 (exp)


State 114

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   39    | exp OR exp .
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    PLUS       shift, and go to state 92
    TIMES      shift, and go to state 94

    $default  reduce using rule 39 (exp)


State 115

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   35    | exp PLUS exp .
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    DIVIDE  shift, and go to state 83
    TIMES   shift, and go to state 94

    $default  reduce using rule 35 (exp)


State 116

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   36    | exp TIMES exp .
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp

    $default  reduce using rule 36 (exp)


State 117

   27 stmt: WHILE LPAREN exp RPAREN . LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 121


State 118

   53 actualsList: actualsList COMMA . exp

    AMP           shift, and go to state 50
    AT            shift, and go to state 31
    FALSE         shift, and go to state 51
    ID            shift, and go to state 16
    INTLITERAL    shift, and go to state 52
    LPAREN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55
    SHORTLITERAL  shift, and go to state 57
    STRLITERAL    shift, and go to state 58
    TRUE          shift, and go to state 59

    exp        go to state 122
    assignExp  go to state 61
    callExp    go to state 62
    term       go to state 63
    lval       go to state 64
    id         go to state 44


State 119

   51 callExp: id LPAREN actualsList RPAREN .

    $default  reduce using rule 51 (callExp)


State 120

   28 stmt: IF LPAREN exp RPAREN LCURLY . stmtList RCURLY
   29     | IF LPAREN exp RPAREN LCURLY . stmtList RCURLY ELSE LCURLY stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 123


State 121

   27 stmt: WHILE LPAREN exp RPAREN LCURLY . stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 124


State 122

   34 exp: exp . MINUS exp
   35    | exp . PLUS exp
   36    | exp . TIMES exp
   37    | exp . DIVIDE exp
   38    | exp . AND exp
   39    | exp . OR exp
   40    | exp . EQUALS exp
   41    | exp . NOTEQUALS exp
   42    | exp . GREATER exp
   43    | exp . GREATEREQ exp
   44    | exp . LESS exp
   45    | exp . LESSEQ exp
   53 actualsList: actualsList COMMA exp .

    AND        shift, and go to state 82
    DIVIDE     shift, and go to state 83
    EQUALS     shift, and go to state 84
    GREATER    shift, and go to state 85
    GREATEREQ  shift, and go to state 86
    LESS       shift, and go to state 87
    LESSEQ     shift, and go to state 88
    MINUS      shift, and go to state 89
    NOTEQUALS  shift, and go to state 90
    OR         shift, and go to state 91
    PLUS       shift, and go to state 92
    TIMES      shift, and go to state 94

    $default  reduce using rule 53 (actualsList)


State 123

   20 stmtList: stmtList . stmt
   28 stmt: IF LPAREN exp RPAREN LCURLY stmtList . RCURLY
   29     | IF LPAREN exp RPAREN LCURLY stmtList . RCURLY ELSE LCURLY stmtList RCURLY

    AT      shift, and go to state 31
    BOOL    shift, and go to state 4
    ID      shift, and go to state 16
    IF      shift, and go to state 32
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    READ    shift, and go to state 33
    RETURN  shift, and go to state 34
    RCURLY  shift, and go to state 125
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9
    WHILE   shift, and go to state 36
    WRITE   shift, and go to state 37

    varDecl    go to state 38
    type       go to state 39
    primType   go to state 13
    stmt       go to state 40
    assignExp  go to state 41
    callExp    go to state 42
    lval       go to state 43
    id         go to state 44


State 124

   20 stmtList: stmtList . stmt
   27 stmt: WHILE LPAREN exp RPAREN LCURLY stmtList . RCURLY

    AT      shift, and go to state 31
    BOOL    shift, and go to state 4
    ID      shift, and go to state 16
    IF      shift, and go to state 32
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    READ    shift, and go to state 33
    RETURN  shift, and go to state 34
    RCURLY  shift, and go to state 126
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9
    WHILE   shift, and go to state 36
    WRITE   shift, and go to state 37

    varDecl    go to state 38
    type       go to state 39
    primType   go to state 13
    stmt       go to state 40
    assignExp  go to state 41
    callExp    go to state 42
    lval       go to state 43
    id         go to state 44


State 125

   28 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY .
   29     | IF LPAREN exp RPAREN LCURLY stmtList RCURLY . ELSE LCURLY stmtList RCURLY

    ELSE  shift, and go to state 127

    $default  reduce using rule 28 (stmt)


State 126

   27 stmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY .

    $default  reduce using rule 27 (stmt)


State 127

   29 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE . LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 128


State 128

   29 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY . stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 129


State 129

   20 stmtList: stmtList . stmt
   29 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList . RCURLY

    AT      shift, and go to state 31
    BOOL    shift, and go to state 4
    ID      shift, and go to state 16
    IF      shift, and go to state 32
    INT     shift, and go to state 5
    PTR     shift, and go to state 6
    READ    shift, and go to state 33
    RETURN  shift, and go to state 34
    RCURLY  shift, and go to state 130
    SHORT   shift, and go to state 7
    STRING  shift, and go to state 8
    VOID    shift, and go to state 9
    WHILE   shift, and go to state 36
    WRITE   shift, and go to state 37

    varDecl    go to state 38
    type       go to state 39
    primType   go to state 13
    stmt       go to state 40
    assignExp  go to state 41
    callExp    go to state 42
    lval       go to state 43
    id         go to state 44


State 130

   29 stmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY .

    $default  reduce using rule 29 (stmt)
